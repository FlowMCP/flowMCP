Your task is to create a generalized Schema Spec v1.0.0 from the two attached files.

You are provided with the files Validation.mjs and an example. In Validation.mjs, you'll find all required parameters listed under Validation.getTypes(), which must be included.

Proceed logically and explain each key and block thoroughly.

After you've done this, ensure you follow these characteristics precisely:

- headers is a one-dimensional object. For example: { 'apiKey': 'Bearer {{MY_SECRET}}' }. This secret is then inserted via serverParams, and the secret must also be specified within requiredServerParams.
- flowMCP must contain the current Spec version.
- Within the route block under parameters, user inputs can be defined using the placeholder {{USER_PARAMS}}. A "z" object is only necessary in this case.
- A "z" object contains two keys: primitive and options. primitive is required if z is required. options can be [].
- Clearly list all primitives and options. Note that these are functions; therefore, parentheses () are expected after the names, for example, "optional()" or when passing values, "min(20)" or "enum(a,b,c,d)".
- A parameter with the value {{USER_PARAM}} is always required unless the optional() key is specified in z.options.
- A response can be processed subsequently by one or multiple post-processing steps, defined under modifiers.
- The Spec is only fully satisfied if the schema is stored in a .mjs file, enabling an export as { schema }.
- if a parameter in position.location has the value 'insert', it is expected that the key from position.key appears in the route as a string with the prefix ":". for example: api/:address/tx. this value is then replaced with the position.value value.